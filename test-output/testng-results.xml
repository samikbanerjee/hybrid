<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Maui Jim Test Execution Suite" duration-ms="86079" started-at="2017-07-19T01:02:15Z" finished-at="2017-07-19T01:03:41Z">
    <groups>
    </groups>
    <test name="CheckoutRegular" duration-ms="86079" started-at="2017-07-19T01:02:15Z" finished-at="2017-07-19T01:03:41Z">
      <class name="com.pragiti.excutionEngine.UIExecutor">
        <test-method status="PASS" signature="initializeTestBaseSetup(java.lang.String, java.lang.String)[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="initializeTestBaseSetup" is-config="true" duration-ms="11665" started-at="2017-07-18T18:02:03Z" finished-at="2017-07-18T18:02:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://usmauijim.stg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeTestBaseSetup -->
        <test-method status="PASS" signature="setupSuite()[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="setupSuite" is-config="true" duration-ms="2" started-at="2017-07-18T18:02:15Z" finished-at="2017-07-18T18:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method status="PASS" signature="initiaLizeTest(java.lang.String, java.lang.String)[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="initiaLizeTest" is-config="true" duration-ms="0" started-at="2017-07-18T18:02:15Z" finished-at="2017-07-18T18:02:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Checkout.xlsx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Checkout.xlsx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiaLizeTest -->
        <test-method status="PASS" signature="setUpTest()[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="setUpTest" is-config="true" duration-ms="0" started-at="2017-07-18T18:02:15Z" depends-on-methods="com.pragiti.core.BaseSetup.initiaLizeTest" finished-at="2017-07-18T18:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="setUp" is-config="true" duration-ms="0" started-at="2017-07-18T18:02:15Z" finished-at="2017-07-18T18:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="execute([Ljava.lang.String;)[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="execute" duration-ms="85314" started-at="2017-07-18T18:02:15Z" data-provider="uiexecxlsx" finished-at="2017-07-18T18:03:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@546ccad7]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidElementStateException">
            <message>
              <![CDATA[Element is not enabled
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'SAMIK-PC', ip: '10.103.6.77', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_45'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{moz:profile=C:\Users\Samik\AppData\Local\Temp\rust_mozprofile.bNlQuLWjuYFu, rotatable=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY, specificationLevel=0.0, moz:accessibilityChecks=false, acceptInsecureCerts=true, browserVersion=54.0.1, platformVersion=10.0, moz:processID=17476.0, browserName=firefox, javascriptEnabled=true, platformName=windows_nt}]
Session ID: 890d2330-26b4-4d8e-bc6a-2737dd53cc95]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: Element is not enabled
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'SAMIK-PC', ip: '10.103.6.77', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_45'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{moz:profile=C:\Users\Samik\AppData\Local\Temp\rust_mozprofile.bNlQuLWjuYFu, rotatable=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY, specificationLevel=0.0, moz:accessibilityChecks=false, acceptInsecureCerts=true, browserVersion=54.0.1, platformVersion=10.0, moz:processID=17476.0, browserName=firefox, javascriptEnabled=true, platformName=windows_nt}]
Session ID: 890d2330-26b4-4d8e-bc6a-2737dd53cc95
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:150)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:115)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:272)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:82)
	at com.pragiti.excutionEngine.ActionKeys.click(ActionKeys.java:61)
	at com.pragiti.excutionEngine.ActionKeys.executeAction(ActionKeys.java:26)
	at com.pragiti.excutionEngine.UIExecutor.execute(UIExecutor.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidElementStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- execute -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.pragiti.excutionEngine.UIExecutor@2b9627bc]" name="tearDown" is-config="true" duration-ms="1015" started-at="2017-07-18T18:03:41Z" finished-at="2017-07-18T18:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pragiti.excutionEngine.UIExecutor -->
    </test> <!-- CheckoutRegular -->
  </suite> <!-- Maui Jim Test Execution Suite -->
</testng-results>
